
/**
 * 	Generated by mxmlc 2.0
 *
 *	Package:	
 *	Class: 		EmbedXmlReaderSample
 *	Source: 	D:\profile\yui-frameworks\workspace1\yui-frameworks-examples\src\main\flex\EmbedXmlReaderSample.mxml
 *	Template: 	flex2/compiler/mxml/gen/ClassDef.vm
 *	Time: 		2009.12.04 21:59:11 JST
 */

package 
{

import flash.accessibility.*;
import flash.debugger.*;
import flash.display.*;
import flash.errors.*;
import flash.events.*;
import flash.external.*;
import flash.filters.*;
import flash.geom.*;
import flash.media.*;
import flash.net.*;
import flash.printing.*;
import flash.profiler.*;
import flash.system.*;
import flash.text.*;
import flash.ui.*;
import flash.utils.*;
import flash.xml.*;
import mx.binding.*;
import mx.binding.IBindingClient;
import mx.containers.HDividedBox;
import mx.containers.Panel;
import mx.controls.TextArea;
import mx.controls.Tree;
import mx.core.Application;
import mx.core.ClassFactory;
import mx.core.DeferredInstanceFromClass;
import mx.core.DeferredInstanceFromFunction;
import mx.core.IDeferredInstance;
import mx.core.IFactory;
import mx.core.IPropertyChangeNotifier;
import mx.core.UIComponentDescriptor;
import mx.core.mx_internal;
import mx.events.FlexEvent;
import mx.events.ListEvent;
import mx.styles.*;


[Frame(extraClass="_EmbedXmlReaderSample_FlexInit")]

[Frame(factoryClass="_EmbedXmlReaderSample_mx_managers_SystemManager")]


//	begin class def

public class EmbedXmlReaderSample
	extends mx.core.Application
	implements mx.binding.IBindingClient
{

	//	instance variables
/**
 * @private
 **/
	public var _EmbedXmlReaderSample_TextArea1 : mx.controls.TextArea;

	[Bindable]
/**
 * @private
 **/
	public var myTree : mx.controls.Tree;


	//	type-import dummies


	//	Container document descriptor
private var _documentDescriptor_ : mx.core.UIComponentDescriptor = 
new mx.core.UIComponentDescriptor({
  type: mx.core.Application
  ,
  propertiesFactory: function():Object { return {
    childDescriptors: [
      new mx.core.UIComponentDescriptor({
        type: mx.containers.Panel
        ,
        stylesFactory: function():void {
          this.paddingTop = 10;
          this.paddingLeft = 10;
          this.paddingRight = 10;
          this.paddingBottom = 10;
        }
        ,
        propertiesFactory: function():Object { return {
          title: "埋め込みXMLツリーサンプル",
          percentHeight: 75.0,
          percentWidth: 75.0,
          childDescriptors: [
            new mx.core.UIComponentDescriptor({
              type: mx.containers.HDividedBox
              ,
              propertiesFactory: function():Object { return {
                percentWidth: 100.0,
                percentHeight: 100.0,
                childDescriptors: [
                  new mx.core.UIComponentDescriptor({
                    type: mx.controls.Tree
                    ,
                    id: "myTree"
                    ,
                    events: {
                      change: "__myTree_change"
                    }
                    ,
                    propertiesFactory: function():Object { return {
                      percentWidth: 50.0,
                      percentHeight: 100.0,
                      labelField: "@label",
                      showRoot: true
                    }}
                  })
                ,
                  new mx.core.UIComponentDescriptor({
                    type: mx.controls.TextArea
                    ,
                    id: "_EmbedXmlReaderSample_TextArea1"
                    ,
                    propertiesFactory: function():Object { return {
                      percentHeight: 100.0,
                      percentWidth: 50.0
                    }}
                  })
                ]
              }}
            })
          ]
        }}
      })
    ]
  }}
})

	//	constructor (Flex display object)
    /**
     * @private
     **/
	public function EmbedXmlReaderSample()
	{
		super();

		mx_internal::_document = this;

		//	our style settings


		//	ambient styles
		mx_internal::_EmbedXmlReaderSample_StylesInit();

		//	properties
		this.layout = "absolute";

		//	events
		this.addEventListener("initialize", ___EmbedXmlReaderSample_Application1_initialize);

	}

	//	initialize()
    /**
     * @private
     **/
	override public function initialize():void
	{
 		mx_internal::setDocumentDescriptor(_documentDescriptor_);

		var bindings:Array = _EmbedXmlReaderSample_bindingsSetup();
		var watchers:Array = [];

		var target:EmbedXmlReaderSample = this;

		if (_watcherSetupUtil == null)
		{
			var watcherSetupUtilClass:Object = getDefinitionByName("_EmbedXmlReaderSampleWatcherSetupUtil");
			watcherSetupUtilClass["init"](null);
		}

		_watcherSetupUtil.setup(this,
					function(propertyName:String):* { return target[propertyName]; },
					bindings,
					watchers);

		for (var i:uint = 0; i < bindings.length; i++)
		{
			Binding(bindings[i]).execute();
		}

		mx_internal::_bindings = mx_internal::_bindings.concat(bindings);
		mx_internal::_watchers = mx_internal::_watchers.concat(watchers);


		super.initialize();
	}

	//	scripts
	//	<Script>, line 8 - 28

		    import org.seasar.akabana.yui.resources.embed.EmbedXmlReader;

            [Bindable]
            public var selectedNode:XML;
            
            [Bindable]
            public var treeData:XML;
			
			[Embed(source='resources/tree.xml', mimeType='application/octet-stream')]
            private static const treeXml:Class;

			private function initApp():void{
				var embedReader:EmbedXmlReader = new EmbedXmlReader();
				treeData = embedReader.read( treeXml ) as XML;
			}

            public function treeChanged(event:Event):void {
                selectedNode= Tree(event.target).selectedItem as XML;
            }
        

	//	end scripts


    //	supporting function definitions for properties, events, styles, effects
/**
 * @private
 **/
public function ___EmbedXmlReaderSample_Application1_initialize(event:mx.events.FlexEvent):void
{
	initApp()
}

/**
 * @private
 **/
public function __myTree_change(event:mx.events.ListEvent):void
{
	treeChanged(event)
}


	//	binding mgmt
    private function _EmbedXmlReaderSample_bindingsSetup():Array
    {
        var result:Array = [];
        var binding:Binding;

        binding = new mx.binding.Binding(this,
            function():Object
            {
                return (treeData);
            },
            function(_sourceFunctionReturnValue:Object):void
            {
				
                myTree.dataProvider = _sourceFunctionReturnValue;
            },
            "myTree.dataProvider");
        result[0] = binding;
        binding = new mx.binding.Binding(this,
            function():String
            {
                var result:* = "選択した項目: " + (selectedNode.@label);
                var stringResult:String = (result == undefined ? null : String(result));
                return stringResult;
            },
            function(_sourceFunctionReturnValue:String):void
            {
				
                _EmbedXmlReaderSample_TextArea1.text = _sourceFunctionReturnValue;
            },
            "_EmbedXmlReaderSample_TextArea1.text");
        result[1] = binding;

        return result;
    }

    private function _EmbedXmlReaderSample_bindingExprs():void
    {
        var destination:*;
		[Binding(id='0')]
		destination = (treeData);
		[Binding(id='1')]
		destination = "選択した項目: " + (selectedNode.@label);
    }

    /**
     * @private
     **/
    public static function set watcherSetupUtil(watcherSetupUtil:IWatcherSetupUtil):void
    {
        (EmbedXmlReaderSample)._watcherSetupUtil = watcherSetupUtil;
    }

    private static var _watcherSetupUtil:IWatcherSetupUtil;

	//	initialize style defs for EmbedXmlReaderSample

	mx_internal static var _EmbedXmlReaderSample_StylesInit_done:Boolean = false;

	mx_internal function _EmbedXmlReaderSample_StylesInit():void
	{
		//	only add our style defs to the StyleManager once
		if (mx_internal::_EmbedXmlReaderSample_StylesInit_done)
			return;
		else
			mx_internal::_EmbedXmlReaderSample_StylesInit_done = true;

		var style:CSSStyleDeclaration;
		var effects:Array;


		StyleManager.mx_internal::initProtoChainRoots();
	}


	//	embed carrier vars
	//	end embed carrier vars

	//	binding management vars
    /**
     * @private
     **/
    mx_internal var _bindings : Array = [];
    /**
     * @private
     **/
    mx_internal var _watchers : Array = [];
    /**
     * @private
     **/
    mx_internal var _bindingsByDestination : Object = {};
    /**
     * @private
     **/
    mx_internal var _bindingsBeginWithWord : Object = {};

//	end class def
}

//	end package def
}
