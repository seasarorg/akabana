<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE components PUBLIC "-//SEASAR//DTD S2Container 2.4//EN" 
    "http://www.seasar.org/dtd/components24.dtd">
<components namespace="remoting">
    <include path="amf3.dicon"/>
    
    <!-- 
        remoting message reader components
    -->
    <component
        class="org.seasar.flex2.rpc.remoting.message.io.reader.factory.impl.MessageReaderFactoryImpl">
        <property name="messageReaderClass">
        @org.seasar.flex2.rpc.remoting.message.io.reader.impl.Amf3MessageReaderImpl@class
        </property>
    </component>
    <component
        class="org.seasar.flex2.rpc.remoting.message.io.reader.impl.Amf3MessageReaderImpl"
        instance="request" />
    
    <!-- 
        remoting message writer components
    -->
    <component
        class="org.seasar.flex2.rpc.remoting.message.io.writer.factory.impl.MessageWriterFactoryImpl">
        <property name="messageWriterClass">
        @org.seasar.flex2.rpc.remoting.message.io.writer.impl.Amf3MessageWriterImpl@class
        </property>
    </component>
    <component
        class="org.seasar.flex2.rpc.remoting.message.io.writer.impl.Amf3MessageWriterImpl"
        instance="request" />
    
    <!--
        remoting message data factory
    -->
    <component
        name="requestMessage"
        class="org.seasar.flex2.rpc.remoting.message.data.Message" instance="request" />
    <component
        name="responseMessage"
        class="org.seasar.flex2.rpc.remoting.message.data.Message" instance="request" />

    <component
        class="org.seasar.flex2.rpc.remoting.message.data.MessageHeader" instance="prototype" />
    <component
        class="org.seasar.flex2.rpc.remoting.message.data.MessageBody" instance="prototype" />
    <component
        class="org.seasar.flex2.rpc.remoting.message.data.Fault" instance="prototype" />
        
    <component
        name="messageFactory"
        class="org.seasar.flex2.rpc.remoting.message.data.factory.impl.MessageFactoryImpl" />
    <component
        class="org.seasar.flex2.rpc.remoting.message.data.factory.impl.MessageBodyFactoryImpl" />
    <component
        class="org.seasar.flex2.rpc.remoting.message.data.factory.impl.MessageHeaderFactoryImpl" />
    <component
        class="org.seasar.flex2.rpc.remoting.message.data.factory.impl.FaultFactoryImpl" />

    <!--
        remoting message processor
    -->
    <component class="org.seasar.flex2.rpc.remoting.message.processor.impl.AppendToGatewayUrlHeaderCreatorImpl">
        <property name="sessionDecorator">
            <component class="org.seasar.flex2.util.session.impl.TomcatSessionDecoratorImpl" />
        </property>
    </component>
    <component
        class="org.seasar.flex2.rpc.remoting.message.processor.impl.MessageHeaderProcessorImpl" />
    <component
        class="org.seasar.flex2.rpc.remoting.message.processor.impl.MessageBodyProcessorImpl" />
    <component
        class="org.seasar.flex2.rpc.remoting.message.processor.impl.MessageProcessorImpl"/>

    <!--
        remoting util
    -->
    <component
        class="org.seasar.flex2.util.data.transfer.impl.TransferImpl" />
    <component
        class="org.seasar.flex2.util.data.storage.impl.StorageLocatorImpl"/>
    <component
        name="serviceDataStorage"
        class="org.seasar.flex2.util.data.storage.impl.HttpSessionDataStorage"
        instance="session" />

    <!--
        remoting service
    -->
    <component
        class="org.seasar.flex2.rpc.remoting.service.impl.RemotingServiceRepositoryImpl"/>
    <component
        class="org.seasar.flex2.rpc.remoting.service.impl.RemotingServiceLocatorImpl" />
    
    <!--
        arguments adjustor
    -->
    <component
        class="org.seasar.flex2.rpc.remoting.service.adjustor.impl.ArrayArgumentAdjustorImpl">
        <property name="converter">
            <component class="org.seasar.flex2.util.converter.impl.ArrayArgumentConverterImpl"/>
        </property>
    </component>
    <component
        class="org.seasar.flex2.rpc.remoting.service.adjustor.impl.MapArgumentAdjustorImpl">
        <property name="converter">
            <component class="org.seasar.flex2.util.converter.impl.MapToBeanConverterImpl"/>
        </property>
    </component>

    <!--
        remoting service invoker
    -->
    <component
        class="org.seasar.flex2.rpc.remoting.service.impl.DataTransferSupportedRemotingServiceInvokerImpl">
        <property name="forbiddenMethodMap">
            <component class="java.util.HashMap">
                <initMethod name="put">
                    <arg>"equals"</arg>
                    <arg>null</arg>
                </initMethod>
                <initMethod name="put">
                    <arg>"getClass"</arg>
                    <arg>null</arg>
                </initMethod>
                <initMethod name="put">
                    <arg>"hashCode"</arg>
                    <arg>null</arg>
                </initMethod>
                <initMethod name="put">
                    <arg>"notify"</arg>
                    <arg>null</arg>
                </initMethod>
                <initMethod name="put">
                    <arg>"notifyAll"</arg>
                    <arg>null</arg>
                </initMethod>
                <initMethod name="put">
                    <arg>"toString"</arg>
                    <arg>null</arg>
                </initMethod>
                <initMethod name="put">
                    <arg>"wait"</arg>
                    <arg>null</arg>
                </initMethod>  
            </component>
        </property>
    </component>
    <component
        class="org.seasar.flex2.rpc.remoting.service.impl.RemotingServiceInvokerChooserImpl"/>
    
    <!--
        remoting processor
    -->
    <component
        class="org.seasar.flex2.rpc.remoting.processor.impl.RemotingMessageProcessorImpl" />
</components>